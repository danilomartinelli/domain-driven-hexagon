# ==================================================
# KUBERNETES NAMESPACE WITH SECURITY POLICIES
# ==================================================
apiVersion: v1
kind: Namespace
metadata:
  name: ddh-production
  labels:
    name: ddh-production
    environment: production
    app.kubernetes.io/name: domain-driven-hexagon
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: namespace
    security.kubernetes.io/policy: restricted
  annotations:
    description: "Production namespace for Domain-Driven Hexagon application"
    security.kubernetes.io/enforce: "restricted"
    security.kubernetes.io/audit: "restricted"
    security.kubernetes.io/warn: "restricted"
---
# ==================================================
# NETWORK POLICIES - ZERO-TRUST NETWORKING
# ==================================================
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ddh-app-network-policy
  namespace: ddh-production
  labels:
    app.kubernetes.io/name: ddh-app
    app.kubernetes.io/component: network-policy
spec:
  podSelector:
    matchLabels:
      app: ddh-app
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    # Allow traffic from nginx ingress
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app: ddh-nginx
    ports:
    - protocol: TCP
      port: 3000
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow access to PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app: ddh-postgres
    ports:
    - protocol: TCP
      port: 5432
  # Allow access to Redis
  - to:
    - podSelector:
        matchLabels:
          app: ddh-redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow access to RabbitMQ
  - to:
    - podSelector:
        matchLabels:
          app: ddh-rabbitmq
    ports:
    - protocol: TCP
      port: 5672
---
# Database network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ddh-database-network-policy
  namespace: ddh-production
spec:
  podSelector:
    matchLabels:
      tier: database
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: ddh-app
    - podSelector:
        matchLabels:
          app: ddh-grafana
    ports:
    - protocol: TCP
      port: 5432
  egress:
  # Allow DNS
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Block all other egress traffic
---
# ==================================================
# POD SECURITY POLICY (DEPRECATED) - USE POD SECURITY STANDARDS
# ==================================================
# Note: Pod Security Policies are deprecated in K8s 1.21+
# Using Pod Security Standards instead (configured at namespace level)
---
# ==================================================
# RESOURCE QUOTAS AND LIMITS
# ==================================================
apiVersion: v1
kind: ResourceQuota
metadata:
  name: ddh-resource-quota
  namespace: ddh-production
spec:
  hard:
    # Compute resources
    requests.cpu: "4"
    requests.memory: 8Gi
    limits.cpu: "8"
    limits.memory: 16Gi
    
    # Storage resources
    requests.storage: 100Gi
    persistentvolumeclaims: "10"
    
    # Object counts
    pods: "20"
    services: "10"
    secrets: "20"
    configmaps: "10"
    ingresses.networking.k8s.io: "5"
    
    # Security constraints
    count/podsecuritypolicies: "1"
    count/networkpolicies: "5"
---
apiVersion: v1
kind: LimitRange
metadata:
  name: ddh-limit-range
  namespace: ddh-production
spec:
  limits:
  - type: Container
    default:
      cpu: "1"
      memory: 1Gi
    defaultRequest:
      cpu: 100m
      memory: 128Mi
    max:
      cpu: "2"
      memory: 4Gi
    min:
      cpu: 50m
      memory: 64Mi
  - type: Pod
    max:
      cpu: "4"
      memory: 8Gi
    min:
      cpu: 100m
      memory: 128Mi