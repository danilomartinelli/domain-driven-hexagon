# ==================================================
# NGINX PRODUCTION CONFIGURATION - SECURITY HARDENED
# ==================================================
# Features:
# - TLS 1.3 with perfect forward secrecy
# - Security headers (HSTS, CSP, etc.)
# - Rate limiting and DDoS protection
# - Load balancing with health checks
# - Request filtering and validation
# - Comprehensive logging

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx/nginx.pid;

# ==================================================
# EVENT PROCESSING
# ==================================================
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

# ==================================================
# HTTP CONFIGURATION
# ==================================================
http {
    # ==================================================
    # BASIC SETTINGS
    # ==================================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;
    
    # Hide nginx version and server tokens
    server_tokens off;
    more_set_headers "Server: DDH-API";
    
    # ==================================================
    # PERFORMANCE OPTIMIZATIONS
    # ==================================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    client_max_body_size 10m;
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;
    
    # Buffer settings
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # ==================================================
    # COMPRESSION
    # ==================================================
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types
        application/atom+xml
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;
        
    # ==================================================
    # SECURITY HEADERS
    # ==================================================
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;
    
    # X-Frame-Options (prevent clickjacking)
    add_header X-Frame-Options "DENY" always;
    
    # X-Content-Type-Options (prevent MIME sniffing)
    add_header X-Content-Type-Options "nosniff" always;
    
    # X-XSS-Protection
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Referrer Policy
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Permissions Policy
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()" always;
    
    # Cross-Origin Policies
    add_header Cross-Origin-Opener-Policy "same-origin" always;
    add_header Cross-Origin-Embedder-Policy "require-corp" always;
    
    # ==================================================
    # RATE LIMITING
    # ==================================================
    # Define rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=global:10m rate=1000r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn conn_limit_per_ip 20;
    
    # ==================================================
    # LOGGING FORMAT
    # ==================================================
    log_format security_log '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           '"$http_x_forwarded_for" "$http_x_real_ip" '
                           '$request_time $upstream_response_time '
                           '"$upstream_addr" "$ssl_protocol" "$ssl_cipher"';
                           
    log_format json_log escape=json '{'
                       '"timestamp":"$time_iso8601",'
                       '"remote_addr":"$remote_addr",'
                       '"request":"$request",'
                       '"status":"$status",'
                       '"body_bytes_sent":"$body_bytes_sent",'
                       '"request_time":"$request_time",'
                       '"upstream_response_time":"$upstream_response_time",'
                       '"user_agent":"$http_user_agent",'
                       '"x_forwarded_for":"$http_x_forwarded_for"'
                       '}';
    
    access_log /var/log/nginx/access.log security_log;
    access_log /var/log/nginx/access_json.log json_log;
    
    # ==================================================
    # UPSTREAM CONFIGURATION
    # ==================================================
    upstream ddh_app {
        least_conn;
        server app:3000 max_fails=3 fail_timeout=30s;
        # Add more app instances for load balancing
        # server app2:3000 max_fails=3 fail_timeout=30s;
        # server app3:3000 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }
    
    # ==================================================
    # HTTP TO HTTPS REDIRECT
    # ==================================================
    server {
        listen 80;
        server_name api.yourdomain.com;
        
        # Security headers even for redirect
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        
        # Redirect all HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    # ==================================================
    # HTTPS SERVER CONFIGURATION
    # ==================================================
    server {
        listen 443 ssl http2;
        server_name api.yourdomain.com;
        
        # ==================================================
        # SSL/TLS CONFIGURATION
        # ==================================================
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/chain.pem;
        
        # TLS settings for security
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_ecdh_curve secp384r1;
        
        # SSL session settings
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        
        # ==================================================
        # SECURITY CONFIGURATIONS
        # ==================================================
        # Block common attack vectors
        location ~* \.(git|svn|hg)/ {
            deny all;
            return 444;
        }
        
        # Block access to sensitive files
        location ~* \.(env|ini|conf|sql|sh)$ {
            deny all;
            return 444;
        }
        
        # Block user agent scanners and bots
        if ($http_user_agent ~* (nmap|nikto|wikto|sf|sqlmap|bsqlbf|w3af|acunetix|havij|appscan)) {
            return 444;
        }
        
        # Block suspicious request methods
        if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS|PATCH)$ ) {
            return 444;
        }
        
        # ==================================================
        # RATE LIMITING CONFIGURATION
        # ==================================================
        # Global rate limiting
        limit_req zone=global burst=50 nodelay;
        
        # ==================================================
        # HEALTH CHECK ENDPOINT
        # ==================================================
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "healthy\n";
        }
        
        # ==================================================
        # API ENDPOINTS
        # ==================================================
        location /api/ {
            # Rate limiting for API
            limit_req zone=api burst=20 nodelay;
            
            # Security headers specific to API
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            
            # Proxy configuration
            proxy_pass http://ddh_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Proxy timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Cache control
            proxy_cache_bypass $http_upgrade;
        }
        
        # ==================================================
        # AUTHENTICATION ENDPOINTS (STRICTER RATE LIMITING)
        # ==================================================
        location ~ ^/api/(auth|login|register|password) {
            # Stricter rate limiting for auth endpoints
            limit_req zone=auth burst=5 nodelay;
            
            # Additional security for auth endpoints
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            
            # Block if not HTTPS
            if ($scheme != "https") {
                return 444;
            }
            
            # Proxy to application
            proxy_pass http://ddh_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # ==================================================
        # GRAPHQL ENDPOINT
        # ==================================================
        location /graphql {
            # Rate limiting
            limit_req zone=api burst=10 nodelay;
            
            # Only allow POST for GraphQL
            limit_except POST {
                deny all;
            }
            
            # Security headers
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            
            # Proxy configuration
            proxy_pass http://ddh_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # ==================================================
        # SWAGGER DOCUMENTATION (PRODUCTION)
        # ==================================================
        location /docs {
            # Basic auth for production docs (optional)
            # auth_basic "Documentation Access";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            
            # Rate limiting
            limit_req zone=api burst=10 nodelay;
            
            # Proxy configuration
            proxy_pass http://ddh_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # ==================================================
        # METRICS ENDPOINT (RESTRICTED ACCESS)
        # ==================================================
        location /metrics {
            # Allow only from monitoring systems
            allow 172.23.0.0/24;  # monitoring network
            allow 127.0.0.1;      # localhost
            deny all;
            
            # Proxy configuration
            proxy_pass http://ddh_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # ==================================================
        # STATIC FILES (IF ANY)
        # ==================================================
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # Security for static files
            location ~* \.(php|jsp|pl|py|asp|sh|cgi)$ {
                deny all;
                return 444;
            }
        }
        
        # ==================================================
        # DEFAULT LOCATION (DENY ALL OTHER REQUESTS)
        # ==================================================
        location / {
            # Return 444 for unmatched requests
            return 444;
        }
        
        # ==================================================
        # ERROR PAGES
        # ==================================================
        error_page 400 401 403 404 /40x.html;
        location = /40x.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        # Custom error handling
        error_page 444 =444 @blackhole;
        location @blackhole {
            return 444;
        }
    }
    
    # ==================================================
    # MONITORING SERVER (INTERNAL ACCESS ONLY)
    # ==================================================
    server {
        listen 8080;
        server_name monitoring.internal;
        
        # Allow only from monitoring network
        allow 172.23.0.0/24;
        allow 127.0.0.1;
        deny all;
        
        # Nginx status for monitoring
        location /nginx_status {
            stub_status on;
            access_log off;
        }
        
        # Health check
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "nginx healthy\n";
        }
    }
}

# ==================================================
# STREAM CONFIGURATION (FOR TCP LOAD BALANCING)
# ==================================================
stream {
    # Define upstream for database connections if needed
    upstream postgres_backend {
        server postgres:5432;
    }
    
    # Load balance PostgreSQL connections (if needed)
    server {
        listen 5433;
        proxy_pass postgres_backend;
        proxy_timeout 1s;
        proxy_responses 1;
        error_log /var/log/nginx/postgres_lb.log;
    }
}